# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  [push]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    outputs:
      jar_version: ${{ steps.bump.outputs.jar_version }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
      - name: Bump jar version
        id: bump
        run: |
          POMPATH=./
          OLD_VERSION=$(cd $POMPATH && mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          BUMP_MODE="none"
          old="$OLD_VERSION"
          parts=( ${old//./ } )
          bv=$((parts[2] + 1))
          NEW_VERSION="${parts[0]}.${parts[1]}.${bv}"
          echo "pom.xml at" $POMPATH "will be bumped from" $OLD_VERSION "to" $NEW_VERSION
          mvn -q versions:set -DnewVersion="${NEW_VERSION}" --file $POMPATH/pom.xml
          echo ::set-output name=jar_version::${NEW_VERSION}
      - name: Compile
        run: mvn -B compile --file pom.xml

      - name: Build a package
        run: mvn -B package --file pom.xml

      - name: Temporarily save jar artifact
        uses: actions/upload-artifact@v3
        with:
          name: jar-artifact
          path: ${{ github.workspace }}/target/*.jar
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v1
        with:
          name: jar-artifact
          path: target/
      - name: Docker build
        run: |
          docker build . -t chg86/java-cicd-demo:${{needs.build.outputs.jar_version}}

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker push
        run: |
          docker push chg86/java-cicd-demo:${{needs.build.outputs.jar_version}}